<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>
	<!-- 引入配置文件 -->
	<properties resource="generator.properties"/>
	
	<!-- 指定数据连接驱动jar地址 -->
	<classPathEntry location="${classPath}" />
	
	<!-- 一个数据库一个context -->
	<context id="infoGuardian" targetRuntime="MyBatis3">

		<!-- 指定生成的java文件的编码,没有直接生成到项目时中文可能会乱码 -->
        <property name="javaFileEncoding" value="UTF-8"/>

        <plugin type="org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin" />

        <!-- 这里的type里写的是你的实现类的类全路径 -->
        <!--<commentGenerator type="cn.jie.sql.fromtable.mybatisgenerator.plugin.MyCommentGenerator">
        </commentGenerator>-->
		
		<!-- jdbc连接 -->
		<jdbcConnection driverClass="${jdbc_driver}"
			connectionURL="${jdbc_url}" userId="${jdbc_user}"
			password="${jdbc_password}" />
		
		<!-- 类型转换 -->
		<javaTypeResolver>
			<!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
			<property name="forceBigDecimals" value="true"/>
		</javaTypeResolver>
		
		<!-- 生成实体类地址 -->	
		<javaModelGenerator targetPackage="com.ishare.litemall.db.entity"
			targetProject="${project}" >
			<!-- 是否在当前路径下新加一层schema,eg：fase路径cn.ffcs.test.domain"， true:cn.ffcs.test.domain".[schemaName] -->
			<property name="enableSubPackages" value="false"/>
			<!-- 是否针对string类型的字段在set的时候进行trim调用 -->
			<property name="trimStrings" value="true"/>
			<!-- 设置一个根对象，
				如果设置了这个根对象，那么生成的keyClass或者recordClass会继承这个类；在Table的rootClass属性中可以覆盖该选项
				注意：如果在key class或者record class中有root class相同的属性，MBG就不会重新生成这些属性了，包括：
					1，属性名相同，类型相同，有相同的getter/setter方法；
			 -->
			<property name="rootClass" value="com.ishare.litemall.db.base.BaseEntity"/>
            <property name="rootMapper" value="com.ishare.litemall.db.base.DataMapper"/>
            <property name="rootExample" value="com.ishare.litemall.db.base.BaseExample"/>
		</javaModelGenerator>
		
		<!-- 生成mapper.xml文件 -->
		<sqlMapGenerator targetPackage="com.ishare.litemall.db.dao"
			targetProject="${resource}" >
			<!-- 是否在当前路径下新加一层schema,eg：fase路径cn.ffcs.test.domain"， true:cn.ffcs.test.domain".[schemaName] -->
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>
		
		<!-- 生成mapper.xml对应client，也就是接口dao -->
		<javaClientGenerator targetPackage="com.ishare.litemall.db.dao"
			targetProject="${project}" type="XMLMAPPER" >
			<!-- 是否在当前路径下新加一层schema,eg：fase路径cn.ffcs.test.domain"， true:cn.ffcs.test.domain".[schemaName] -->
			<property name="enableSubPackages" value="false" />
		</javaClientGenerator>


		<!-- 配置表信息，这里每生成一张表，这里需要改变一次对应表名 -->
		<!-- <table schema="qqdata" tableName="QQ_ACCOUNT"
			domainObjectName="QqAccunt" enableCountByExample="true"
			enableDeleteByExample="true" enableSelectByExample="true"
			enableUpdateByExample="true"> -->
			<!-- schema即为数据库名  ；tableName为对应的数据库表；
			 domainObjectName是要生成的实体类名（可空）；
			  enable*ByExample 是否生成 example类   -->
			
			<!-- 忽略列，不生成bean 字段 
			<ignoreColumn column="FRED" />-->
			<!-- 指定列的java数据类型 
	      	<columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />-->
		<!-- </table> -->

	</context>
</generatorConfiguration>